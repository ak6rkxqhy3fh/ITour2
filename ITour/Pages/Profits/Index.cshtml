@page
@model ITour.Pages.Profits.IndexModel

@{
    ViewData["Title"] = "Платежи";
}

<h3>
    Платежи
    <small>
        <a data-toggle="collapse" href="#collapseFilter" aria-expanded="false" aria-controls="collapseFilter">
            <i class="glyphicon glyphicon-filter"></i> Фильтр
        </a>
    </small>
</h3>

@{
    string inStr = Model.ProfitFilter.NotAllParamsIsNull ? "in" : "";
}

<div class="collapse @inStr" id="collapseFilter">
    <div class="card card-body">
        <form asp-page="./Index" method="get" id="filterForm">
            <input type="hidden" name="ProfitSort.SortState" value="@Model.ProfitSort.SortState" />
            <div class="form-actions ">
                <div class="row">
                    <div class="form-group col col-md-1">
                        <label>№</label>
                        <input asp-for="ProfitFilter.Number" class="form-control col-md-3" />
                    </div>
                    <div class="form-group col col-md-2">
                        <label>Период</label>
                        <div><input asp-for="ProfitFilter.PeriodFrom" class="form-control col-md-3" /></div>
                        <div><input asp-for="ProfitFilter.PeriodTo" class="form-control col-md-3" /></div>
                    </div>
                    <div class="form-group col col-md-2">
                        <label>Менеджер</label>
                        <select asp-for="ProfitFilter.ManagerId" class="form-control col-md-3" asp-items="@ViewBag.FilterManagerId">
                            <option value="">--- Все ---</option>
                        </select>
                    </div>
                    <div class="form-group col col-md-2">
                        <label>Заказчик</label>
                        <input asp-for="ProfitFilter.CustomerName" class="form-control col-md-3" />
                    </div>
                    <div class="form-group col col-md-3 align-self-center">
                        <br />
                        <button type="submit" class="btn btn-default"><i class="glyphicon glyphicon-search"></i> Искать</button> |
                        <a asp-page="./Index">Сбросить</a>
                    </div>
                </div>
            </div>
        </form>
    </div>
</div>

@{
    Dictionary<string, string> AllRouteData = new Dictionary<string, string>()
{
{"ProfitFilter.OrderNumber", Model.ProfitFilter.Number.ToString() },
{"ProfitFilter.PeriodFrom", Model.ProfitFilter.PeriodFrom.HasValue ? ((DateTime)Model.ProfitFilter.PeriodFrom).ToString("yyyy-MM-dd") : ""},
{"ProfitFilter.PeriodTo", Model.ProfitFilter.PeriodTo.HasValue ? ((DateTime)Model.ProfitFilter.PeriodTo).ToString("yyyy-MM-dd") : ""},
{"ProfitFilter.AgencyCompanyId", Model.ProfitFilter.AgencyCompanyId.ToString() },
{"ProfitFilter.ManagerId", Model.ProfitFilter.ManagerId.ToString() },
{"ProfitFilter.CustomerName", Model.ProfitFilter.CustomerName },
{"ProfitPaginate.PageSize", Model.ProfitPaginate.PageSize.ToString() },
{"ProfitSort.SortState", Model.ProfitSort.SortState.ToString() }
};
    string glyphicon_triangle = "";
}

@*<div style="margin-left: -10%;">*@
    <table class="table table-condensed table-responsive table-hover">
        <thead>
            <tr>
                <th nowrap>
                    @{Dictionary<string, string> OrderNumberAllRouteData = new Dictionary<string, string>(AllRouteData) { { "ProfitSort.SortOrder", Model.ProfitSort.OrderNumberSort.ToString() } }; }
                    @if (Model.ProfitSort.SortState == ProfitSortState.OrderNumberAsc) { glyphicon_triangle = "glyphicon-triangle-top"; }
                    @if (Model.ProfitSort.SortState == ProfitSortState.OrderNumberDesc) { glyphicon_triangle = "glyphicon-triangle-bottom"; }
                    <a asp-page="./Index" asp-all-route-data="@OrderNumberAllRouteData" class="sort-link">
                        <span class="glyphicon @glyphicon_triangle"></span> @{glyphicon_triangle = ""; }
                        @Html.DisplayNameFor(model => model.Order[0].Number)
                    </a>
                </th>
                <th nowrap>
                    @{Dictionary<string, string> OrderDatePrintAllRouteData = new Dictionary<string, string>(AllRouteData) { { "ProfitSort.SortOrder", @Model.ProfitSort.OrderPrintDateSort.ToString() } }; }
                    @if (Model.ProfitSort.SortState == ProfitSortState.OrderPrintDateAsc) { glyphicon_triangle = "glyphicon-triangle-top"; }
                    @if (Model.ProfitSort.SortState == ProfitSortState.OrderPrintDateDesc) { glyphicon_triangle = "glyphicon-triangle-bottom"; }
                    <a asp-page="./Index" asp-all-route-data="@OrderDatePrintAllRouteData" class="sort-link">
                        <span class="glyphicon @glyphicon_triangle"></span> @{glyphicon_triangle = ""; }
                        @Html.DisplayNameFor(model => model.Order[0].DatePrint)
                    </a>
                </th>
                <th nowrap>
                    @{Dictionary<string, string> ManagerNameAllRouteData = new Dictionary<string, string>(AllRouteData) { { "ProfitSort.SortOrder", @Model.ProfitSort.ManagerNameSort.ToString() } }; }
                    @if (Model.ProfitSort.SortState == ProfitSortState.ManagerNameAsc) { glyphicon_triangle = "glyphicon-triangle-top"; }
                    @if (Model.ProfitSort.SortState == ProfitSortState.ManagerNameDesc) { glyphicon_triangle = "glyphicon-triangle-bottom"; }
                    <a asp-page="./Index" asp-all-route-data="@ManagerNameAllRouteData" class="sort-link">
                        <span class="glyphicon @glyphicon_triangle"></span> @{glyphicon_triangle = ""; }
                        @Html.DisplayNameFor(model => model.Order[0].Manager)
                    </a>
                </th>
                <th nowrap>
                    @{Dictionary<string, string> CustomerNameAllRouteData = new Dictionary<string, string>(AllRouteData) { { "ProfitSort.SortOrder", @Model.ProfitSort.CustomerNameSort.ToString() } }; }
                    @if (Model.ProfitSort.SortState == ProfitSortState.CustomerNameAsc) { glyphicon_triangle = "glyphicon-triangle-top"; }
                    @if (Model.ProfitSort.SortState == ProfitSortState.CustomerNameDesc) { glyphicon_triangle = "glyphicon-triangle-bottom"; }
                    <a asp-page="./Index" asp-all-route-data="@CustomerNameAllRouteData" class="sort-link">
                        <span class="glyphicon @glyphicon_triangle"></span> @{glyphicon_triangle = ""; }
                        @Html.DisplayNameFor(model => model.Order[0].Customer)
                    </a>
                </th>
                <th>
                    Туроператор
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Order[0].OrderCostNumeric)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Order[0].IncomingPaymentsTotalNumeric)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Order[0].OutgoingPaymentsTotalNumeric)
                </th>
                <th>Базовое вознаграждение</th>
                <th>Дополнительное вознаграждение</th>
                <th>Вознаграждение</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.Order)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Number)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.DatePrint)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Manager.Name)
                    </td>
                    <td>
                        <table>
                            <tr><td>@Html.DisplayFor(modelItem => item.Customer.Person.SurnameInitials)</td></tr>
                            <tr><td>@Html.DisplayFor(modelItem => item.Customer.CustomerCompany.Name)</td></tr>
                        </table>
                    </td>
                    <td>
                        <table>
                            @foreach (var orderTouroperatorCompany in item.Touroperators)
                            {
                                <tr><td>@Html.DisplayFor(modelItem => orderTouroperatorCompany.TouroperatorCompany.Name)</td></tr>
                            }
                        </table>
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.OrderCostNumeric)<br />
                    </td>
                    <td>
                        <u>@Html.DisplayFor(modelItem => item.IncomingPaymentsTotalNumeric)</u>
                        <a asp-page="./IncomingPayments/Create" asp-route-orderId="@item.Id">
                            <span class="glyphicon glyphicon-plus-sign" title="Добавить входящий платеж"></span>
                        </a>
                        <table>
                            @foreach (var incomingPaymenItem in item.IncomingPayments)
                            {
                                <tr>
                                    <td nowrap>
                                        <a asp-page="./IncomingPayments/Details" asp-route-incomingPaymentId="@incomingPaymenItem.Id" title="Детали платежа">
                                            <small>@Html.DisplayFor(modelIncomingPaymenItem => incomingPaymenItem.PaymentAmountNumeric)</small>
                                        </a>
                                    </td>
                                    <td nowrap>
                                        <small>&nbsp;(@Html.DisplayFor(modelIncomingPaymenItem => incomingPaymenItem.PaymentDate))</small>
                                    </td>
                                    <td nowrap>
                                        <a asp-page="./IncomingPayments/Edit" asp-route-incomingPaymentId="@incomingPaymenItem.Id">
                                            &nbsp;<span class="glyphicon glyphicon-edit" title="Изменить входящий платеж"></span>
                                        </a>
                                    </td>
                                    <td nowrap>
                                        <a asp-page="./IncomingPayments/Delete" asp-route-incomingPaymentId="@incomingPaymenItem.Id">
                                            &nbsp;<span class="glyphicon glyphicon-minus-sign" title="Удалить входящий платеж"></span>
                                        </a>
                                    </td>
                                </tr>
                            }
                        </table>
                        <small>
                            (Долг заказчика: @Html.DisplayFor(modelItem => item.CustomerDebtNumeric))<br />
                        </small>
                    </td>
                    <td>
                        <u>
                            @Html.DisplayFor(modelItem => item.OutgoingPaymentsTotalNumeric)
                            <a asp-page="./OutgoingPayments/Create" asp-route-orderId="@item.Id">
                                <span class="glyphicon glyphicon-plus-sign" title="Добавить исходящий платеж"></span>
                            </a>
                        </u>
                        <table>
                            @foreach (var outgoingPaymenItem in item.OutgoingPayments)
                            {
                                <tr>
                                    <td nowrap>
                                        <a asp-page="./OutgoingPayments/Details" asp-route-outgoingPaymentId="@outgoingPaymenItem.Id" title="Детали платежа">
                                            <small>@Html.DisplayFor(modelOutgoingPaymenItem => outgoingPaymenItem.PaymentAmountNumeric)</small>
                                        </a>
                                    </td>
                                    <td nowrap>
                                        <small>&nbsp;(@Html.DisplayFor(modelOutgoingPaymenItem => outgoingPaymenItem.PaymentDate))</small>
                                    </td>
                                    <td nowrap>
                                        <small>&nbsp;(@Html.DisplayFor(modelOutgoingPaymenItem => outgoingPaymenItem.PartnerCompany.Name))</small>
                                    </td>
                                    <td nowrap>
                                        <a asp-page="./OutgoingPayments/Edit" asp-route-outgoingPaymentId="@outgoingPaymenItem.Id">
                                            &nbsp;<span class="glyphicon glyphicon-edit" title="Изменить исходящий платеж"></span>
                                        </a>
                                    </td>
                                    <td nowrap>
                                        <a asp-page="./OutgoingPayments/Delete" asp-route-outgoingPaymentId="@outgoingPaymenItem.Id">
                                            &nbsp;<span class="glyphicon glyphicon-minus-sign" title="Удалить исходящий платеж"></span>
                                        </a>
                                    </td>
                                </tr>
                            }
                        </table>
                    </td>
                    <td>
                        <table>
                            <tr><td><small>@Html.DisplayFor(modelItem => item.Profit.СalculatedBasicProfitNumeric)</small></td></tr>
                            <tr><td><small>@Html.DisplayFor(modelItem => item.Profit.ManualBasicProfitNumeric)</small></td></tr>
                            <tr><th>@Html.DisplayFor(modelItem => item.Profit.BasicProfitNumeric)</th></tr>
                        </table>
                    <td>
                        <table>
                            <tr><td><small>@Html.DisplayFor(modelItem => item.Profit.СalculatedAddProfitNumeric)</small></td></tr>
                            <tr><td><small>@Html.DisplayFor(modelItem => item.Profit.ManualAddProfitNumeric)</small></td></tr>
                            <tr><th>@Html.DisplayFor(modelItem => item.Profit.AddProfitNumeric)</th></tr>
                        </table>
                    </td>
                    <td  class="h4">@Html.DisplayFor(modelItem => item.Profit.ProfitTotalNumeric)</td>
                    <td>
                        <a asp-page="./Edit" asp-route-profitId="@item.Profit?.Id" asp-route-orderId="@item.Id" asp-route-tenantId="@item.TenantId">
                            <span class="glyphicon glyphicon-edit" title="Изменить вознаграждение"></span>
                        </a>
                        <a asp-page-handler="ExportAccountingInfo" asp-route-orderId="@item.Id">
                            <span class="glyphicon glyphicon-print" title="Экспорт Word"></span>
                        </a>
                        @Html.DisplayFor(modelItem => item.Profit.IsHide)
                    </td>
                </tr>
            }
        </tbody>
    </table>
@*</div>*@



@{
    string prevDisabled = !Model.ProfitPaginate.HasPreviousPage ? "disabled" : "";
    string nextDisabled = !Model.ProfitPaginate.HasNextPage ? "disabled" : "";
}

<div class="row">
    <table class="col-md-8">
        <tr>
            <td align="center">
                <ul class="pagination">
                    <li class="page-item @prevDisabled" title="Первая">
                        @{Dictionary<string, string> FirstAllRouteData = new Dictionary<string, string>(AllRouteData) { { "ProfitPaginate.PageNumber", (1).ToString() } }; }
                        <a asp-page="./Index" asp-all-route-data="FirstAllRouteData"><span class="glyphicon glyphicon-step-backward"></span></a>
                    </li>
                    <li class="page-item @prevDisabled" title="Предыдущая">
                        @{Dictionary<string, string> PrevAllRouteData = new Dictionary<string, string>(AllRouteData) { { "ProfitPaginate.PageNumber", (Model.ProfitPaginate.PageNumber - 1).ToString() } };}
                        <a asp-page="./Index" asp-all-route-data="PrevAllRouteData"><span class="glyphicon glyphicon-triangle-left"></span></a>
                    </li>
                    <li class="page-item @nextDisabled" title="Следующая">
                        @{Dictionary<string, string> NextAllRouteData = new Dictionary<string, string>(AllRouteData) { { "ProfitPaginate.PageNumber", (Model.ProfitPaginate.PageNumber + 1).ToString() } }; }
                        <a asp-page="./Index" asp-all-route-data="NextAllRouteData"><span class="glyphicon glyphicon-triangle-right"></span></a>
                    </li>
                    <li class="page-item @nextDisabled" title="Последняя">
                        @{Dictionary<string, string> LastAllRouteData = new Dictionary<string, string>(AllRouteData) { { "ProfitPaginate.PageNumber", (Model.ProfitPaginate.TotalPages).ToString() } }; }
                        <a asp-page="./Index" asp-all-route-data="LastAllRouteData"><span class="glyphicon glyphicon-step-forward"></span></a>
                    </li>
                </ul>
            </td>
            <td align="center">
                Страница @Model.ProfitPaginate.PageNumber из @Model.ProfitPaginate.TotalPages
            </td>
            <td align="center">По&nbsp;</td>
            <td align="center"><select class="form-control" asp-for="@Model.ProfitPaginate.PageSize" form="filterForm" asp-items="@ViewBag.PageSize" onchange="this.form.submit();"></select></td>
            <td align="center">&nbsp;строк</td>
            <td align="center">Всего @Model.ProfitPaginate.Count записей</td>
        </tr>
    </table>
</div>
